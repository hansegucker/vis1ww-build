{"version":3,"sources":["data.js","App.js","serviceWorker.js","index.js"],"names":["statData","countries","russia","greatBritian","france","germany","austriaHungary","data","id","type","name","dependsOn","value","library","add","faArrowDown","faArrowRight","getByKey","array","key","val","item","forEach","v","console","log","getProportion","top","bottom","toFixed","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onChangeMaleStudents","e","target","Number","isNaN","n","parseInt","setState","maleStudents","state","t","react_default","a","createElement","className","reactstrap_es","color","light","expand","href","onClick","toggle","isOpen","navbar","for","placeholder","onChange","react_fontawesome_index_es","icon","values","map","country","idx","scope","keys","toLocaleString","depending","idx2","indexOf","inClass","b","calcWithProp","react_chartkick_esm","ytitle","xtitle","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90528eb7.chunk.js","sourcesContent":["const statData = {\n    \"countries\": {\n        \"russia\": \"Russland\",\n        \"greatBritian\": \"Großbritannien\",\n        \"france\": \"Frankreich\",\n        \"germany\": \"Deutschland\",\n        \"austriaHungary\": \"Österreich-Ungarn\"\n    },\n    \"data\": [\n        {\n            \"id\": \"population\",\n            \"type\": \"base\",\n            \"name\": \"Bevölkerung, 1910-1911\",\n            \"russia\": 160700000,\n            \"greatBritian\": 40460000,\n            \"france\": 39192000,\n            \"germany\": 64296000,\n            \"austriaHungary\": 51356000\n        },\n\n        {\n            \"id\": \"malePopulation\",\n            \"type\": \"depending\",\n            \"dependsOn\": [\n                \"population\"\n            ],\n            \"name\": \"männliche Bevölkerung\",\n            \"russia\": 78790000,\n            \"greatBritian\": 19638000,\n            \"france\": 19254000,\n            \"germany\": 32040000,\n            \"austriaHungary\": 23374000\n        },\n        {\n            \"id\": \"yourClass\",\n            \"type\": \"base\",\n            \"name\": \"Jungen in eurer Klasse\",\n            \"value\": 30\n        },\n        {\n            \"id\": \"mobilizedPopulation\",\n            \"type\": \"depending\",\n            \"dependsOn\": [\n                \"malePopulation\"\n            ],\n            \"name\": \"mobilisierte Männer 1914-1918\",\n            \"russia\": 13700000,\n            \"greatBritian\": 6211000,\n            \"france\": 8660000,\n            \"germany\": 13250000,\n            \"austriaHungary\": 8000000\n        },\n        {\n            \"id\": \"militaryLosses\",\n            \"type\": \"depending\",\n            \"dependsOn\": [\n                \"mobilizedPopulation\",\n                \"malePopulation\"\n            ],\n            \"name\": \"militärische Verluste, insgesamt\",\n            \"russia\": 5409000,\n            \"greatBritian\": 2438000,\n            \"france\": 3120000,\n            \"germany\": 6193000,\n            \"austriaHungary\": 6400000\n        },\n        {\n            \"id\": \"killedInAction\",\n            \"type\": \"depending\",\n            \"dependsOn\": [\n                \"mobilizedPopulation\",\n                \"malePopulation\"\n            ],\n            \"name\": \"gefallen\",\n            \"russia\": 1660000,\n            \"greatBritian\": 745000,\n            \"france\": 1420000,\n            \"germany\": 2045000,\n            \"austriaHungary\": 1100000\n        },\n        {\n            \"id\": \"wounded\",\n            \"type\": \"depending\",\n            \"dependsOn\": [\n                \"mobilizedPopulation\",\n                \"malePopulation\"\n            ],\n            \"name\": \"verwundet\",\n            \"russia\": 3749000,\n            \"greatBritian\": 1693000,\n            \"france\": 1700000,\n            \"germany\": 4148000,\n            \"austriaHungary\": 5300000\n        }\n    ]\n};\nexport default statData;","import React, {Component} from 'react';\nimport './App.css';\nimport {\n    Col,\n    Collapse,\n    FormGroup,\n    Input,\n    Label,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    NavItem,\n    NavLink, Row,\n    Table\n} from \"reactstrap\";\nimport statData from \"./data\";\n\n// Font awesome\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faArrowDown, faArrowRight} from '@fortawesome/free-solid-svg-icons'\nimport {ColumnChart} from \"react-chartkick\";\n\nlibrary.add(faArrowDown);\nlibrary.add(faArrowRight);\n\nconst LOCALE = \"de-DE\";\n\n\nfunction getByKey(array, key, val) {\n    let item = null;\n    array.forEach(function (v) {\n        if (v[key] === val) {\n            console.log(v);\n            item = v;\n        }\n    });\n    return item;\n}\n\nfunction getProportion(top, bottom) {\n    return (top / bottom * 100).toFixed(0);\n}\n\nfunction calcWithProp(t, b) {\n    return (t * (b / 100)).toFixed(0);\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: statData,\n            maleStudents: 30,\n\n        }\n    }\n\n    _onChangeMaleStudents = (e) => {\n        const val = e.target.value;\n        console.log(val);\n        if (Number.isNaN(val) || val ==\"\") {\n            console.log(\"No number\");\n        } else {\n            const n = Number.parseInt(val);\n            this.setState({\n                maleStudents: n\n            })\n        }\n    };\n\n    render() {\n        const t = this;\n        return (\n            <div className=\"App\">\n                <header>\n                    <Navbar color=\"light\" light expand=\"md\">\n                        <NavbarBrand href=\"/\">Militärische Mobilisierung und Verluste im 1. Weltkrieg\n                            (1914–1918)</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle}/>\n                        <Collapse isOpen={true} navbar>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <NavLink href=\"/components/\">Components</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </Navbar>\n                </header>\n                <main>\n                    <FormGroup>\n                        <Label for=\"studentsCount\">In eurer Klasse sind ... Jungen</Label>\n                        <Input type=\"number\" name=\"studentsCount\" id=\"studentsCount\"\n                               placeholder=\"Anzahl der Jungen in eurer Klasse\" onChange={this._onChangeMaleStudents}/>\n                    </FormGroup>\n                    <Row>\n                        <Col>\n                            <Table>\n                                <thead>\n                                <tr>\n                                    <th>Kategorie <FontAwesomeIcon icon={\"arrow-down\"}/> Land <FontAwesomeIcon\n                                        icon={\"arrow-right\"}/></th>\n                                    {Object.values(statData.countries).map(function (country) {\n                                        return <th key={country}>{country}</th>\n                                    })}\n\n\n                                </tr>\n                                </thead>\n                                {statData.data.map(function (item, idx) {\n                                    return <tbody key={item.id}>\n                                    <tr>\n                                        <th scope={\"row\"}>{item.name}</th>\n                                        {Object.keys(statData.countries).map(function (country) {\n                                            let val = item.id !== \"yourClass\" ? item[country] : item.value;\n                                            val = Number(val);\n                                            return <td className={\"number\"}\n                                                       key={country}>{val.toLocaleString(LOCALE)}</td>;\n                                        })}\n                                    </tr>\n                                    {item.type === \"depending\" ? item.dependsOn.map(function (depending, idx2) {\n                                        depending = getByKey(statData.data, \"id\", depending);\n                                        return <tr key={idx2}>\n\n                                            <td>Anteil an <em>{depending.name}</em></td>\n                                            {Object.keys(statData.countries).map(function (country) {\n                                                let val = item[country];\n                                                val = getProportion(val, depending[country]);\n                                                val = Number(val);\n                                                return <td className={\"number\"}\n                                                           key={country}>{val.toLocaleString(LOCALE)} % <br/>\n                                                </td>;\n                                            })}\n                                        </tr>;\n                                    }) : null}\n\n                                    {item.type === \"depending\" ? item.dependsOn.indexOf(\"malePopulation\") !== -1 ? <tr>\n                                        <td>Umgerechnet auf eure Klasse</td>\n                                        {Object.keys(statData.countries).map(function (country) {\n                                            let val = item[country];\n                                            const depending = getByKey(statData.data, \"id\", \"malePopulation\");\n                                            val = getProportion(val, depending[country]);\n                                            val = Number(val);\n                                            let inClass = calcWithProp(t.state.maleStudents, val);\n                                            return <td className={\"number\"}\n                                                       key={country}>\n\n                                                <strong>{inClass}</strong> Jungen</td>;\n                                        })}\n                                    </tr> : null : null}\n                                    </tbody>;\n                                })}\n\n                            </Table>\n                        </Col>\n\n\n                        <Col>\n                            <ColumnChart data={\n                                [\n                                    {\n                                        \"name\": \"mobilisierte Männer\",\n                                        \"data\": Object.keys(statData.countries).map(function (country) {\n                                            const fullCountry = statData.countries[country];\n                                            const mobilized = statData.data[3][country];\n                                            // const malePopulation = statData.data[1][country];\n                                            // const proportion = getProportion(mobilized,malePopulation);\n                                            return [fullCountry, mobilized];\n                                        })\n                                    },\n                                    {\n                                        \"name\": \"miltitärische Verluste, insgesamt\",\n                                        \"data\": Object.keys(statData.countries).map(function (country) {\n                                            const fullCountry = statData.countries[country];\n                                            const militaryLosses = statData.data[4][country];\n                                            // const malePopulation = statData.data[1][country];\n                                            // const proportion = getProportion(mobilized,malePopulation);\n                                            return [fullCountry, militaryLosses];\n                                        })\n                                    }\n                                ]\n                            } ytitle={\"Anzahl der Männer\"} xtitle={\"Land\"}/>\n                        </Col>\n                    </Row>\n                    <p className={\"text-muted\"}>\n                        Quelle: Roger Chickering: Das Deutsche Reich und der Erste Weltkrieg. München 2002, S. 235\n                    </p>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}